# Windows testing using Visual Studio.

# Syntax for this file:
# http://www.appveyor.com/docs/appveyor-yml

# See http://msdn.microsoft.com/en-us/library/ms164311.aspx for
# command-line options to MSBuild.

# Speeding up a Visual Studio build.
# http://blogs.msdn.com/b/vcblog/archive/2011/01/05/damn-my-vc-project-is-building-slower-in-vs2010-what-do-i-do-now-a-step-by-step-guide.aspx

shallow_clone: true

init:
  # Put MSBuild on the path.
  - SET PATH=C:\Program Files (x86)\MSBuild\12.0\bin\;%PATH%
  
nuget:
  account_feed: true

install:
  # Use Chocolatey to install SWIG 3.0.0.
  #- cinst swig
  
  ## Simbody.
  # Simbody's installation is pushed to our Appveyor NuGet account feed.
  # Must use version 0.0.0, otherwise, nuget will use nuget.org, where
  # chrisdembia once uploaded a simbody 3.5.0 nupkg.
  # Output directory must match how Simbody was packaged, otherwise
  # SimbodyConfig.cmake will have all the wrong paths.
  - nuget install simbody -Version 0.0.0 -ExcludeVersion -OutputDirectory C:\

build_script:
  ## Configure and build OpenSim.
  # Must create separate build dir, otherwise can't read test files
  # for some reason.
  - mkdir build
  - cd build
  # Configure. Treat warnings as errors.
  # "/EHsc" is to "unwind semantics" to get error messages when using "/WX" (C4530).
  - cmake .. -DSIMBODY_HOME=C:\simbody -DCMAKE_CXX_FLAGS="/WX /EHsc"
  # Build.
  - MSBuild OpenSim.sln /target:ALL_BUILD /p:Configuration=Release /maxcpucount /verbosity:quiet

test_script:
  - ctest -j8 --build-config Release --output-on-failure
